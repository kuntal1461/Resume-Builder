name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  signoff:
    name: DCO Sign-off
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Verify Signed-off-by trailers
        env:
          EVENT_NAME: ${{ github.event_name }}
          BEFORE_SHA: ${{ github.event.before }}
          AFTER_SHA: ${{ github.event.after }}
          PR_BASE_SHA: ${{ github.event.pull_request.base.sha }}
          PR_HEAD_SHA: ${{ github.event.pull_request.head.sha }}
        run: |
          set -euo pipefail

          if [ "$EVENT_NAME" = "pull_request" ]; then
            RANGE="${PR_BASE_SHA}..${PR_HEAD_SHA}"
          else
            if [ "$BEFORE_SHA" = "0000000000000000000000000000000000000000" ]; then
              RANGE="${AFTER_SHA}"
            else
              RANGE="${BEFORE_SHA}..${AFTER_SHA}"
            fi
          fi

          COMMITS=$(git rev-list $RANGE)
          if [ -z "$COMMITS" ]; then
            echo "No commits found in range ${RANGE}"
            exit 0
          fi

          failed=0
          for commit in $COMMITS; do
            if ! git show -s --format=%B "$commit" | grep -iq "Signed-off-by:"; then
              echo "::error file=,title=Missing Signed-off-by::Commit $commit lacks a Signed-off-by trailer"
              failed=1
            fi
          done

          if [ "$failed" -ne 0 ]; then
            exit 1
          fi

  backend:
    name: Backend (FastAPI)
    runs-on: ubuntu-latest
    needs: signoff
    defaults:
      run:
        working-directory: job-recommendation-system
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"
          cache-dependency-path: job-recommendation-system/web/requirements.txt

      - name: Install dependencies
        run: python -m pip install --upgrade pip && python -m pip install -r web/requirements.txt

      - name: Compile sources
        run: python -m compileall core web

  frontend:
    name: Frontend (Next.js)
    runs-on: ubuntu-latest
    needs: backend
    defaults:
      run:
        working-directory: job-recommendation-system/front-end
    env:
      NEXT_TELEMETRY_DISABLED: "1"
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: job-recommendation-system/front-end/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Lint
        run: npm run lint

      - name: Build
        run: npm run build
